define(["require", "exports"], function (require, exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var car = (function () {
        function car() {
        }
        return car;
    }());
    exports.car = car;
    var carLience = (function () {
        function carLience() {
        }
        return carLience;
    }());
    exports.carLience = carLience;
    var face = (function () {
        function face() {
        }
        return face;
    }());
    exports.face = face;
    var persionLience = (function () {
        function persionLience() {
        }
        return persionLience;
    }());
    exports.persionLience = persionLience;
    var wifi = (function () {
        function wifi() {
        }
        return wifi;
    }());
    exports.wifi = wifi;
    var electronic = (function () {
        function electronic() {
        }
        return electronic;
    }());
    exports.electronic = electronic;
    var device = (function () {
        function device() {
        }
        return device;
    }());
    exports.device = device;
    var position = (function () {
        function position() {
        }
        return position;
    }());
    exports.position = position;
    var ResultData = (function () {
        function ResultData() {
        }
        return ResultData;
    }());
    exports.ResultData = ResultData;
});

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9jb3JlL2VudW0vUXVlcnlSZWNvcmQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7O0lBQ0E7UUFBQTtRQTREQSxDQUFDO1FBQUQsVUFBQztJQUFELENBNURBLEFBNERDLElBQUE7SUE1RFksa0JBQUc7SUErRGhCO1FBQUE7UUFFQSxDQUFDO1FBQUQsZ0JBQUM7SUFBRCxDQUZBLEFBRUMsSUFBQTtJQUZZLDhCQUFTO0lBS3RCO1FBQUE7UUFxQ0EsQ0FBQztRQUFELFdBQUM7SUFBRCxDQXJDQSxBQXFDQyxJQUFBO0lBckNZLG9CQUFJO0lBd0NqQjtRQUFBO1FBTUEsQ0FBQztRQUFELG9CQUFDO0lBQUQsQ0FOQSxBQU1DLElBQUE7SUFOWSxzQ0FBYTtJQVMxQjtRQUFBO1FBb0JBLENBQUM7UUFBRCxXQUFDO0lBQUQsQ0FwQkEsQUFvQkMsSUFBQTtJQXBCWSxvQkFBSTtJQXVCakI7UUFBQTtRQWdCQSxDQUFDO1FBQUQsaUJBQUM7SUFBRCxDQWhCQSxBQWdCQyxJQUFBO0lBaEJZLGdDQUFVO0lBbUJ2QjtRQUFBO1FBWUEsQ0FBQztRQUFELGFBQUM7SUFBRCxDQVpBLEFBWUMsSUFBQTtJQVpZLHdCQUFNO0lBZW5CO1FBQUE7UUFPQSxDQUFDO1FBQUQsZUFBQztJQUFELENBUEEsQUFPQyxJQUFBO0lBUFksNEJBQVE7SUFTckI7UUFBQTtRQU9BLENBQUM7UUFBRCxpQkFBQztJQUFELENBUEEsQUFPQyxJQUFBO0lBUFksZ0NBQVUiLCJmaWxlIjoiY29yZS9lbnVtL1F1ZXJ5UmVjb3JkLmpzIiwic291cmNlc0NvbnRlbnQiOlsiLy8g5a6a5LmJ5Y2V5LiA6L2m6L6G5pWw5o2uXHJcbmV4cG9ydCBjbGFzcyBjYXIge1xyXG4gICAgaWQ6IHN0cmluZztcclxuICAgIHByaXZhdGUgb3JnSWQ6IHN0cmluZztcclxuICAgIHByaXZhdGUgbW9uaXRvcklkOiBzdHJpbmc7XHJcbiAgICBwcml2YXRlIGNoYW5uZWxJZDogc3RyaW5nO1xyXG4gICAgcHJpdmF0ZSBkZXZpY2VJZDogc3RyaW5nO1xyXG4gICAgcHJpdmF0ZSBvcmlnaW5hbFZlaGljbGVJbmZvOiBzdHJpbmc7XHJcbiAgICBwcml2YXRlIHNwZWVkOiBudW1iZXI7XHJcbiAgICBwcml2YXRlIGRpcmVjdGlvbjogc3RyaW5nO1xyXG4gICAgcHJpdmF0ZSBhY2Nlc3NUeXBlOiBzdHJpbmc7XHJcbiAgICBwcml2YXRlIHBsYXRlTnVtYmVyOiBzdHJpbmc7XHJcbiAgICBwcml2YXRlIHBsYXRlVHlwZTogc3RyaW5nO1xyXG4gICAgcHJpdmF0ZSBwbGF0ZUNvbG9yOiBzdHJpbmc7XHJcbiAgICBwcml2YXRlIHZlaGljbGVUeXBlOiBzdHJpbmc7XHJcbiAgICBwcml2YXRlIHZlaGljbGVDb2xvcjogc3RyaW5nO1xyXG4gICAgcHJpdmF0ZSB2ZWhpY2xlQnJhbmQ6IHN0cmluZztcclxuICAgIHByaXZhdGUgdmVoaWNsZVN1YkJyYW5kOiBzdHJpbmc7XHJcbiAgICBwcml2YXRlIHZlaGljbGVNb2RlbFllYXI6IHN0cmluZztcclxuICAgIHByaXZhdGUgc3VuVmlzb3JOdW1iZXI6IHN0cmluZztcclxuICAgIHByaXZhdGUgbmFwa2luQm94OiBudW1iZXI7XHJcbiAgICBwcml2YXRlIHBlbmRhbnROdW06IG51bWJlcjtcclxuICAgIHByaXZhdGUgY2hlY2tNYXJrTnVtOiBudW1iZXI7XHJcbiAgICBwcml2YXRlIHNhZmV0eUJlbHROdW06IG51bWJlcjtcclxuICAgIHByaXZhdGUgZmFjZU51bWJlcjogc3RyaW5nO1xyXG4gICAgcHJpdmF0ZSB2ZWhpY2xlQ29udG91cjogc3RyaW5nO1xyXG4gICAgcHJpdmF0ZSBwYW5vcmFtYUltYWdlOiBzdHJpbmc7XHJcbiAgICBwcml2YXRlIGZlYXR1cmVJbWFnZTogc3RyaW5nO1xyXG4gICAgcHJpdmF0ZSBpbWFnZVR5cGU6IHN0cmluZztcclxuICAgIHByaXZhdGUgc3RvcmFnZVRpbWU6IHN0cmluZztcclxuICAgIHByaXZhdGUgeHN6dDogc3RyaW5nO1xyXG4gICAgcHJpdmF0ZSB5enNqOiBzdHJpbmc7XHJcbiAgICBwcml2YXRlIHd6bHg6IHN0cmluZztcclxuICAgIHByaXZhdGUgc2pjejogbnVtYmVyO1xyXG4gICAgcHJpdmF0ZSBob3N0Q29kZTogc3RyaW5nO1xyXG4gICAgcHJpdmF0ZSBleHROdW1iZXI6IG51bWJlcjtcclxuICAgIHByaXZhdGUgZXh0RGF0ZTogc3RyaW5nO1xyXG4gICAgcHJpdmF0ZSBleHRTdHJpbmcxOiBzdHJpbmc7XHJcbiAgICBwcml2YXRlIGV4dFN0cmluZzI6IHN0cmluZztcclxuICAgIHByaXZhdGUgZXh0U3RyaW5nMzogc3RyaW5nO1xyXG4gICAgcHJpdmF0ZSBvcmc6IHN0cmluZztcclxuICAgIHByaXZhdGUgbW9uaXRvcjogc3RyaW5nO1xyXG4gICAgcHJpdmF0ZSBjaGFubmVsOiBzdHJpbmc7XHJcbiAgICBwcml2YXRlIHg6IG51bWJlcjtcclxuICAgIHByaXZhdGUgeTogbnVtYmVyO1xyXG4gICAgcHJpdmF0ZSBtb25pdG9yTmFtZTogc3RyaW5nO1xyXG4gICAgcHJpdmF0ZSBzamx5OiBzdHJpbmc7XHJcbiAgICBwcml2YXRlIGlzQ2FsbFBob25lOiBudW1iZXI7XHJcbiAgICBwcml2YXRlIHFqdHAyOiBzdHJpbmc7XHJcbiAgICBwcml2YXRlIHFqdHAzOiBzdHJpbmc7XHJcbiAgICBwcml2YXRlIHFqdHA0OiBzdHJpbmc7XHJcbiAgICBwcml2YXRlIHR6dHAyOiBzdHJpbmc7XHJcbiAgICBwcml2YXRlIGp1ZGdlRGVjaXNpb246IHN0cmluZztcclxuICAgIHByaXZhdGUganVkZ2VJbmZvOiBzdHJpbmc7XHJcbiAgICBwcml2YXRlIHh4UGxhdGVJZDogc3RyaW5nO1xyXG4gICAgcHJpdmF0ZSBzY29yZTogbnVtYmVyO1xyXG4gICAgcHJpdmF0ZSBwYXNzVGltZVN0cjogc3RyaW5nO1xyXG4gICAgcHJpdmF0ZSBwYXNzVGltZTogc3RyaW5nO1xyXG4gICAgY29sbGVjdFN0YXR1cz86IGJvb2xlYW47XHJcbiAgICBzdXJ2ZWlsbGFuY2VTdGF0dXM/OiBib29sZWFuO1xyXG4gICAgZGV2aWNlSW5mbz86IGFueTtcclxufVxyXG5cclxuLy8g5a6a5LmJ6L2m6L6G5qGj5qGIXHJcbmV4cG9ydCBjbGFzcyBjYXJMaWVuY2Uge1xyXG4gICAgW3Byb3BOYW1lOiBzdHJpbmddOiBhbnk7XHJcbn1cclxuXHJcbi8vIOWumuS5ieWNleS4gOS6uuiEuOaVsOaNrlxyXG5leHBvcnQgY2xhc3MgZmFjZSB7XHJcbiAgICBBY2Nlc3NMb2c6IHtcclxuICAgICAgICBBZ2U6IG51bWJlcjtcclxuICAgICAgICBBcmVhSUQ6IHN0cmluZztcclxuICAgICAgICBBdHRyYWN0aXZlOiBudW1iZXI7XHJcbiAgICAgICAgQm90dG9tQ29sb3I6IG51bWJlcjtcclxuICAgICAgICBDYW1lcmFJRDogc3RyaW5nO1xyXG4gICAgICAgIEZhY2VDb25maWRlbmNlOiBudW1iZXI7XHJcbiAgICAgICAgRmFjZVBhdGg6IHN0cmluZztcclxuICAgICAgICBGYWNlUmVjdDogc3RyaW5nO1xyXG4gICAgICAgIEdlbmRlcjogc3RyaW5nO1xyXG4gICAgICAgIEdsYXNzOiBudW1iZXI7XHJcbiAgICAgICAgSGFzZXh0cmFjdEF0dHJpYnV0ZTogYm9vbGVhbixcclxuICAgICAgICBIYXNleHRyYWN0RmVhdHVyZTogYm9vbGVhbixcclxuICAgICAgICBIYXNmYWNlRmVhdHVyZTogYm9vbGVhbixcclxuICAgICAgICBJRDogc3RyaW5nO1xyXG4gICAgICAgIElzUGFudHM6IG51bWJlcjtcclxuICAgICAgICBJc1NsZWV2ZTogbnVtYmVyO1xyXG4gICAgICAgIExvZ1RpbWU6IHN0cmluZztcclxuICAgICAgICBNYXNrOiBudW1iZXI7XHJcbiAgICAgICAgT3JpZW50YXRpb246IG51bWJlcjtcclxuICAgICAgICBQZXJzb25Db25maWRlbmNlOiBzdHJpbmc7XHJcbiAgICAgICAgUGVyc29uUGF0aD86IHN0cmluZztcclxuICAgICAgICBQZXJzb25SZWN0Pzogc3RyaW5nO1xyXG4gICAgICAgIFJhY2U6IG51bWJlcjtcclxuICAgICAgICBTY2VuZVBhdGg6IHN0cmluZztcclxuICAgICAgICBTbWlsZTogbnVtYmVyO1xyXG4gICAgICAgIFN1bkdsYXNzZXM/OiBudW1iZXI7XHJcbiAgICAgICAgVGFza0lEOiBzdHJpbmc7XHJcbiAgICAgICAgVGV4dHVyZTogbnVtYmVyO1xyXG4gICAgICAgIFVwcGVyQ29sb3I6IG51bWJlcjtcclxuICAgIH07XHJcbiAgICBTY29yZTogbnVtYmVyO1xyXG4gICAgRGV2aWNlVHlwZTogc3RyaW5nO1xyXG4gICAgY29sbGVjdFN0YXR1cz86IGJvb2xlYW47XHJcbiAgICBzdXJ2ZWlsbGFuY2VTdGF0dXM/OiBib29sZWFuO1xyXG4gICAgZGV2aWNlSW5mbz86IGFueTtcclxufVxyXG5cclxuLy8g5a6a5LmJ5Lq65ZGY5qGj5qGIXHJcbmV4cG9ydCBjbGFzcyBwZXJzaW9uTGllbmNlIHtcclxuICAgIExpYklkOiBzdHJpbmc7XHJcbiAgICBMaWJOYW1lOiBzdHJpbmc7XHJcbiAgICBQZXJzb25JbmZvOiBhbnk7XHJcbiAgICBQZXJzb25NZW1vOiBzdHJpbmc7XHJcbiAgICBTY29yZTogbnVtYmVyO1xyXG59XHJcblxyXG4vLyDlrprkuYnljZXkuIB3aWZp5pWw5o2uXHJcbmV4cG9ydCBjbGFzcyB3aWZpIHtcclxuICAgIERldmljZVR5cGU6IHN0cmluZztcclxuICAgIHdpZmlMb2c6IHtcclxuICAgICAgICBBY3FUaW1lOiBzdHJpbmc7XHJcbiAgICAgICAgQXJlYUlkOiBzdHJpbmc7XHJcbiAgICAgICAgQnJhbmQ6IHN0cmluZztcclxuICAgICAgICBJRDogc3RyaW5nO1xyXG4gICAgICAgIElkZW50aXR5Q29udGVudDogc3RyaW5nO1xyXG4gICAgICAgIElkZW50aXR5VHlwZTogc3RyaW5nO1xyXG4gICAgICAgIE1hYzogc3RyaW5nO1xyXG4gICAgICAgIE1hY0RldmljZUlkOiBzdHJpbmc7XHJcbiAgICAgICAgUG9pbnRYOiBzdHJpbmc7XHJcbiAgICAgICAgUG9pbnRZOiBzdHJpbmc7XHJcbiAgICAgICAgUnNzaTogc3RyaW5nO1xyXG4gICAgICAgIFNzaWRMaXN0OiBzdHJpbmc7XHJcbiAgICAgICAgdGFza0lkOiBzdHJpbmc7XHJcbiAgICB9O1xyXG4gICAgY29sbGVjdFN0YXR1cz86IGJvb2xlYW47XHJcbiAgICBzdXJ2ZWlsbGFuY2VTdGF0dXM/OiBib29sZWFuO1xyXG4gICAgZGV2aWNlSW5mbz86IGFueTtcclxufVxyXG5cclxuLy8g5a6a5LmJ5Y2V5LiA55S15Zu05pWw5o2uXHJcbmV4cG9ydCBjbGFzcyBlbGVjdHJvbmljIHtcclxuICAgIERldmljZVR5cGU6IHN0cmluZztcclxuICAgIGVGZW5jZUxvZzoge1xyXG4gICAgICAgIEFjcVRpbWU6IHN0cmluZztcclxuICAgICAgICBBcmVhSWQ6IHN0cmluZztcclxuICAgICAgICBJRDogc3RyaW5nO1xyXG4gICAgICAgIElNRUk6IHN0cmluZztcclxuICAgICAgICBJTVNJOiBzdHJpbmc7XHJcbiAgICAgICAgSU1TSTI6IHN0cmluZztcclxuICAgICAgICBNYWM6IHN0cmluZztcclxuICAgICAgICBNb2JpbGVEZXZpY2VJZDogc3RyaW5nO1xyXG4gICAgICAgIHRhc2tJZDogc3RyaW5nO1xyXG4gICAgfTtcclxuICAgIGNvbGxlY3RTdGF0dXM/OiBib29sZWFuO1xyXG4gICAgc3VydmVpbGxhbmNlU3RhdHVzPzogYm9vbGVhbjtcclxuICAgIGRldmljZUluZm8/OiBhbnk7XHJcbn1cclxuXHJcbi8vIOWumuS5ieWNleS4gOiuvuWkh+aVsOaNrlxyXG5leHBvcnQgY2xhc3MgZGV2aWNlIHtcclxuICAgIElkOiBzdHJpbmc7XHJcbiAgICBBcmVhSWQ6IHN0cmluZztcclxuICAgIENvZGU6IHN0cmluZztcclxuICAgIElwQWRkcmVzczogc3RyaW5nO1xyXG4gICAgT2JqZWN0VHlwZTogc3RyaW5nO1xyXG4gICAgRGlyZWN0OiBzdHJpbmc7XHJcbiAgICBMYXQ6IHN0cmluZztcclxuICAgIExvbjogc3RyaW5nO1xyXG4gICAgTmFtZTogc3RyaW5nO1xyXG4gICAgQnVpbGRMb2NhdGlvbj86IHN0cmluZztcclxuICAgIGNvbGxlY3RTdGF0dXM/OiBib29sZWFuO1xyXG59XHJcblxyXG4vLyDlrprkuYnljZXkuIDkvY3nva7mlbDmja5cclxuZXhwb3J0IGNsYXNzIHBvc2l0aW9uIHtcclxuICAgIGlkOiBzdHJpbmc7XHJcbiAgICBuYW1lOiBzdHJpbmc7XHJcbiAgICB0aW1lOiBzdHJpbmc7XHJcbiAgICBhZGRyZXNzPzogc3RyaW5nO1xyXG4gICAgbGF0TG9uPzogc3RyaW5nO1xyXG4gICAgY29sbGVjdFN0YXR1cz86IGJvb2xlYW47XHJcbn1cclxuXHJcbmV4cG9ydCBjbGFzcyBSZXN1bHREYXRhPFQ+IHtcclxuICAgIHBhZ2VQYXJhbXM/OiBhbnk7XHJcbiAgICBkYXRhOiBBcnJheTxUPjtcclxuICAgIHRhc2tJZD86IHN0cmluZztcclxuICAgIGNvZGU/OiBudW1iZXI7XHJcbiAgICBtZXNzYWdlPzogc3RyaW5nO1xyXG4gICAgc3RhdHVzPzogc3RyaW5nO1xyXG59Il19
