define(["require", "exports"], function (require, exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var TaskSearchParams = (function () {
        function TaskSearchParams() {
        }
        return TaskSearchParams;
    }());
    exports.TaskSearchParams = TaskSearchParams;
    var TaskModel = (function () {
        function TaskModel() {
        }
        return TaskModel;
    }());
    exports.TaskModel = TaskModel;
    var CarMonitor = (function () {
        function CarMonitor() {
        }
        return CarMonitor;
    }());
    exports.CarMonitor = CarMonitor;
    var MacMonitor = (function () {
        function MacMonitor() {
        }
        return MacMonitor;
    }());
    exports.MacMonitor = MacMonitor;
    var CameraParam = (function () {
        function CameraParam() {
            this.DetectMinSize = 60;
            this.DetectMaxSize = 200;
            this.VideoLeft = -1;
            this.VideoRight = -1;
            this.VideoTop = -1;
            this.VideoBottom = -1;
        }
        return CameraParam;
    }());
    exports.CameraParam = CameraParam;
});

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9jb3JlL3NlcnZlci9UYXNrTW9kZWwudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7O0lBVUE7UUFBQTtRQWFBLENBQUM7UUFBRCx1QkFBQztJQUFELENBYkEsQUFhQyxJQUFBO0lBYlksNENBQWdCO0lBZTdCO1FBQUE7UUFnQ0EsQ0FBQztRQUFELGdCQUFDO0lBQUQsQ0FoQ0EsQUFnQ0MsSUFBQTtJQWhDWSw4QkFBUztJQW1DdEI7UUFBQTtRQWlDQSxDQUFDO1FBQUQsaUJBQUM7SUFBRCxDQWpDQSxBQWlDQyxJQUFBO0lBakNZLGdDQUFVO0lBbUN2QjtRQUFBO1FBd0JBLENBQUM7UUFBRCxpQkFBQztJQUFELENBeEJBLEFBd0JDLElBQUE7SUF4QlksZ0NBQVU7SUEwQnZCO1FBQUE7WUFNSSxrQkFBYSxHQUFVLEVBQUUsQ0FBQztZQUMxQixrQkFBYSxHQUFVLEdBQUcsQ0FBQztZQUMzQixjQUFTLEdBQVUsQ0FBQyxDQUFDLENBQUM7WUFDdEIsZUFBVSxHQUFVLENBQUMsQ0FBQyxDQUFDO1lBQ3ZCLGFBQVEsR0FBVSxDQUFDLENBQUMsQ0FBQztZQUNyQixnQkFBVyxHQUFVLENBQUMsQ0FBQyxDQUFDO1FBRzVCLENBQUM7UUFBRCxrQkFBQztJQUFELENBZEEsQUFjQyxJQUFBO0lBZFksa0NBQVciLCJmaWxlIjoiY29yZS9zZXJ2ZXIvVGFza01vZGVsLmpzIiwic291cmNlc0NvbnRlbnQiOlsiLyoqIGNyZWF0ZSBieSB6eHFcclxuICog5biD5o6nL+e7k+aehOWMliDku7vliqHor7fmsYJtb2RlbFxyXG4gKiBAdGltZTogMjAxNy0wNi0xMiAxMDo0MjowNFxyXG4gKiBAcGFyYW1zOlxyXG4gKiBAcmV0dXJuOlxyXG4gKi9cclxuaW1wb3J0IHtQZXJzb259IGZyb20gXCIuLi9lbnRpdHkvUGVyc29uXCI7XHJcbmltcG9ydCB7RXZlbnRSdWxlRXh9IGZyb20gXCIuLi9lbnRpdHkvZXgvRXZlbnRSdWxlRXhcIjtcclxuaW1wb3J0IHtUaW1lVGVtcGxhdGV9IGZyb20gXCIuLi9lbnRpdHkvVGltZVRlbXBsYXRlXCI7XHJcblxyXG5leHBvcnQgY2xhc3MgVGFza1NlYXJjaFBhcmFtc3tcclxuICAgIHN0YXJ0VGltZTpzdHJpbmc7XHJcbiAgICBlbmRUaW1lOnN0cmluZztcclxuICAgIHJ1blN0YXR1czpzdHJpbmc7XHJcbiAgICBhdWRpdFN0YXR1czpzdHJpbmc7XHJcbiAgICBuYW1lOnN0cmluZztcclxuICAgIGxpc3RUeXBlOnN0cmluZztcclxuICAgIHBlcmNlaXZlRGF0YTpzdHJpbmc7XHJcbiAgICBwbGF0ZU51bWJlcjpzdHJpbmc7XHJcbiAgICBwYWdlU2l6ZTpudW1iZXI7XHJcbiAgICBjdXJyZW50UGFnZTpudW1iZXI7XHJcbiAgICBhcmVhSWQ6c3RyaW5nO1xyXG4gICAgdXNlcklkOnN0cmluZztcclxufVxyXG5cclxuZXhwb3J0IGNsYXNzIFRhc2tNb2RlbHtcclxuICAgIEFyckxpYklkczogQXJyYXk8c3RyaW5nPjtcclxuICAgIEF1ZGl0RGVzY3JwdGlvbjogc3RyaW5nO1xyXG4gICAgQXVkaXRTdGF0dXM6IHN0cmluZztcclxuICAgIEF1ZGl0VXNlcjogc3RyaW5nO1xyXG4gICAgQXV0aFVzZXI6c3RyaW5nO1xyXG4gICAgLy/mnprkuL5cclxuICAgIEF1dGhTdGF0dXM6c3RyaW5nO1xyXG4gICAgQXV0aFVzZXJzOiBBcnJheTxzdHJpbmc+O1xyXG4gICAgQ3JlYXRlVXNlcklEOnN0cmluZztcclxuICAgIENvbnRyb2xDb21tYW5kOiBib29sZWFuO1xyXG4gICAgQ3JlYXRlVGltZTogc3RyaW5nO1xyXG4gICAgRGVzY3JpcHRpb246IHN0cmluZztcclxuICAgIElEOiBzdHJpbmc7XHJcbiAgICBTdGF0dXM6c3RyaW5nO1xyXG4gICAgSXNMb25nRWZmZWN0aXZlOiBib29sZWFuO1xyXG4gICAgSGlnaFRocmVzaG9sZDogbnVtYmVyO1xyXG4gICAgTG93VGhyZXNob2xkOiBudW1iZXI7XHJcbiAgICBOYW1lOiBzdHJpbmc7XHJcbiAgICBDYW1lcmFQYXJhbXM6IEFycmF5PENhbWVyYVBhcmFtPjtcclxuICAgIFRpbWVUZW1wbGF0ZUlEOiBzdHJpbmc7XHJcbiAgICBUaW1lVGVtcGxhdGU6IFRpbWVUZW1wbGF0ZTtcclxuICAgIFRhc2tUeXBlOiAgc3RyaW5nO1xyXG4gICAgVHlwZTpzdHJpbmc7XHJcbiAgICBWYWxpZFRpbWVFbmQ6ICBzdHJpbmc7XHJcbiAgICBWYWxpZFRpbWVTdGFydDogIHN0cmluZztcclxuICAgIE9wZXJhdGVUeXBlOnN0cmluZztcclxuICAgIEpzb25Vc2VyRGF0YTphbnk7XHJcbiAgICBBcmVhSUQ6IHN0cmluZztcclxuICAgIEV2ZW50UnVsZTpFdmVudFJ1bGVFeDtcclxuICAgIEV2ZW50UnVsZUlEOnN0cmluZztcclxuICAgIEV4dDpzdHJpbmc7XHJcbn1cclxuXHJcblxyXG5leHBvcnQgY2xhc3MgQ2FyTW9uaXRvcntcclxuICAgIFBsYXRlTnVtYmVyOnN0cmluZztcclxuICAgIFBsYXRlQ29sb3I6c3RyaW5nO1xyXG4gICAgQ2FyUGhvdG86c3RyaW5nO1xyXG4gICAgRGV2aWNlVHlwZTpzdHJpbmc7XHJcbiAgICBWYWxpZFRpbWVTdGFydDpzdHJpbmc7XHJcbiAgICBWYWxpZFRpbWVFbmQ6c3RyaW5nO1xyXG4gICAgT3BlcmF0ZVR5cGU6c3RyaW5nO1xyXG4gICAgVGltZVRlbXBsYXRlSWQ6c3RyaW5nO1xyXG4gICAgVGltZVRlbXBsYXRlOiBUaW1lVGVtcGxhdGU7XHJcbiAgICBMaXN0VHlwZTpzdHJpbmc7XHJcbiAgICBJRDpzdHJpbmc7XHJcbiAgICBUYXNrSWQ6c3RyaW5nO1xyXG4gICAgTmFtZTpzdHJpbmc7XHJcbiAgICBDcmVhdGVUaW1lOnN0cmluZztcclxuICAgIElzTG9uZ0VmZmVjdGl2ZTpib29sZWFuO1xyXG4gICAgQ3JlYXRlVXNlcklEOnN0cmluZztcclxuICAgIFN0YXR1czpzdHJpbmc7XHJcbiAgICBDb250cm9sQ29tbWFuZDpudW1iZXI7XHJcbiAgICBBdWRpdFVzZXI6c3RyaW5nO1xyXG4gICAgQXVkaXRVc2VyTmFtZTpzdHJpbmc7XHJcbiAgICBBdWRpdFN0YXR1czpzdHJpbmc7XHJcbiAgICBBdXRoVXNlcjpzdHJpbmc7XHJcbiAgICBBdWRpdERlc3JwdGlvbjpzdHJpbmc7XHJcbiAgICBEZXNjcmlwdGlvbjpzdHJpbmc7XHJcbiAgICBUYXNrVHlwZTpzdHJpbmc7XHJcbiAgICBFdmVudFJ1bGVJRDpzdHJpbmc7XHJcbiAgICBFeHQ6YW55O1xyXG4gICAgQXJlYUlEOnN0cmluZztcclxuICAgIEV2ZW50UnVsZU5hbWU6c3RyaW5nO1xyXG4gICAgSnNvblVzZXJEYXRhOmFueTtcclxuICAgIElzQ29udHJvbEJ5UHJvZ3JhbTpib29sZWFuO1xyXG4gICAgRXZlbnRSdWxlOkV2ZW50UnVsZUV4O1xyXG59XHJcblxyXG5leHBvcnQgY2xhc3MgTWFjTW9uaXRvciB7XHJcbiAgICBJRDpzdHJpbmc7XHJcbiAgICBOYW1lOnN0cmluZztcclxuICAgIENyZWF0ZVRpbWU6c3RyaW5nO1xyXG4gICAgSXNMb25nRWZmZWN0aXZlOmJvb2xlYW47XHJcbiAgICBWYWxpZFRpbWVTdGFydDpzdHJpbmc7XHJcbiAgICBWYWxpZFRpbWVFbmQ6c3RyaW5nO1xyXG4gICAgQ3JlYXRlVXNlcklEOnN0cmluZztcclxuICAgIFRpbWVUZW1wbGF0ZUlEOnN0cmluZztcclxuICAgIFRpbWVUZW1wbGF0ZTogVGltZVRlbXBsYXRlO1xyXG4gICAgU3RhdHVzOnN0cmluZztcclxuICAgIEF1ZGl0VXNlcjpzdHJpbmc7XHJcbiAgICBBdWRpdFN0YXR1czpzdHJpbmc7XHJcbiAgICBUYXNrVHlwZTpzdHJpbmc7XHJcbiAgICBQZXJjZWl2ZURhdGE6c3RyaW5nO1xyXG4gICAgTGlzdFR5cGU6c3RyaW5nO1xyXG4gICAgRGVzY3JpcHRpb246c3RyaW5nO1xyXG4gICAgRGV2aWNlVHlwZTpzdHJpbmc7XHJcbiAgICBFeHQ6YW55O1xyXG4gICAgQXVkaXRVc2VyTmFtZT86c3RyaW5nO1xyXG4gICAgSnNvblVzZXJEYXRhPzphbnk7XHJcbiAgICBFdmVudFJ1bGVJRDpzdHJpbmc7XHJcbiAgICBPcGVyYXRlVHlwZTpzdHJpbmc7XHJcbiAgICBFdmVudFJ1bGU6RXZlbnRSdWxlRXg7XHJcbn1cclxuXHJcbmV4cG9ydCBjbGFzcyBDYW1lcmFQYXJhbXtcclxuICAgIElEOnN0cmluZztcclxuICAgIE5hbWU6c3RyaW5nO1xyXG4gICAgSXZzU2VydmVySUQ6c3RyaW5nO1xyXG4gICAgU3RhdHVzOmJvb2xlYW47XHJcbiAgICBDYW1lcmFJRDogc3RyaW5nO1xyXG4gICAgRGV0ZWN0TWluU2l6ZTpudW1iZXIgPSA2MDtcclxuICAgIERldGVjdE1heFNpemU6bnVtYmVyID0gMjAwO1xyXG4gICAgVmlkZW9MZWZ0Om51bWJlciA9IC0xO1xyXG4gICAgVmlkZW9SaWdodDpudW1iZXIgPSAtMTtcclxuICAgIFZpZGVvVG9wOm51bWJlciA9IC0xO1xyXG4gICAgVmlkZW9Cb3R0b206bnVtYmVyID0gLTE7XHJcbiAgICBJdnNUYXNrR3JvdXBJRDpzdHJpbmc7XHJcbiAgICBFeHQ6YW55O1xyXG59Il19
