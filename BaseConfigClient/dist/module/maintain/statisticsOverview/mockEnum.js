define(["require", "exports"], function (require, exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var MockStatisticsOverview = (function () {
        function MockStatisticsOverview() {
        }
        return MockStatisticsOverview;
    }());
    exports.MockStatisticsOverview = MockStatisticsOverview;
    function MockStatisticsOverviewList(num) {
        var arr = [];
        for (var i = 1; i <= num; i++) {
            arr.push({
                title: ['摄像机', 'Wi-Fi', '电子围栏', '卡口'],
                total: "160,130",
                online: "160,000",
                alarm: "1,200",
                imagesPath: ['../../../images/maintain/item-camera.png',
                    '../../../images/maintain/Wi-Fi.png',
                    '../../../images/maintain/electronicfence.png',
                    '../../../images/maintain/rmpgate.png'
                ]
            });
        }
        return arr;
    }
    exports.MockStatisticsOverviewList = MockStatisticsOverviewList;
    var MockAreaStatistic = (function () {
        function MockAreaStatistic() {
        }
        return MockAreaStatistic;
    }());
    exports.MockAreaStatistic = MockAreaStatistic;
    function MockAreaStatisticList(num) {
        var arr = [];
        for (var i = 1; i <= num; i++) {
            arr.push({
                area: ['武昌区', '江岸区', '江汉区', '硚口区', '汉阳区', '武昌区', '青山区', '洪山区', '蔡甸区', '江夏区', '黄陂区', '新洲区', '东西湖区', '汉南区'],
                areaTaskStatistics: ['人像结构化任务', '车辆结构化任务'],
                areaDispatchedTaskStatistics: ['人像布控任务', '车辆布控任务', 'MAC布控任务'],
                dispatchedAboutTaskStatistics: ['车辆黑名单', '在逃库', '涉毒库', '涉稳库', '沉迷游戏库', '杀人库', '抢劫库'],
                areaAlarm: ['人员报警', '车辆报警', 'MAC报警'],
                areaAlarmTrend: ['00:00', '01:00', '02:00', '03:00', '04:00', '05:00', '06:00', '07:00', '08:00', '09:00', '10:00', '11:00', '12:00', '13:00', '14:00', '15:00', '16:00', '17:00', '18:00', '19:00', '20:00', '21:00', '22:00', '23:00'],
                deviceAlarmStatistic: ['南山摄像机1', '保安摄像机1', '洪山区摄像机1', '洪山区卡口1', '洪山区Wi-Fi-2', '洪山区电围3', '洪山区摄像机3', '江夏区摄像机1', '江夏区电围5', '江夏区Wi-Fi-K'],
                dispatchedAboutAlarm: ['车辆黑名单', '在逃库', '涉毒库', '涉稳库', '沉迷游戏库', '杀人库', '抢劫库', 'MAC黑名单', '涉黑库', '涉黄库'],
                retrievalStatistics: ['车辆', '人像', 'Wi-Fi', '电围', '设备', '位置'],
                carAnalysisStatistics: ['行车轨迹', '跟车分析', '隐匿挖掘', '碰撞分析', '落脚点分析', '套牌分析', '频次分析', '频繁过车', '套牌分析', '落脚点分析', '套牌分析'],
                personAnalysisStatistics: ['人员轨迹', '人脸分析', '伴随分析', '碰撞分析', '频次分析', '频繁分析', '人脸碰撞', '人员报警'],
                macAnalysisStatistics: ['MAC轨迹', '人脸分析', '伴随分析', '碰撞分析', '频次分析', '频繁分析', '人脸碰撞', '人员报警']
            });
        }
        return arr;
    }
    exports.MockAreaStatisticList = MockAreaStatisticList;
    function MockNumber(x, y, z) {
        function Arr(x, y) {
            var result = [];
            for (var i = 0; i < y; i++) {
                var MockNum = Math.round(Math.random() * x);
                result.push(MockNum);
            }
            return result;
        }
        if (!z) {
            return Arr(x, y);
        }
        else {
            var MockArr = [];
            for (var i = 0; i < z; i++) {
                MockArr.push(Arr(x, y));
            }
            return MockArr;
        }
    }
    exports.MockNumber = MockNumber;
});

//# sourceMappingURL=data:application/json;charset=utf8;base64,
