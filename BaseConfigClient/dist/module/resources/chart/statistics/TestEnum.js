define(["require", "exports"], function (require, exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var MockTitle = (function () {
        function MockTitle() {
        }
        return MockTitle;
    }());
    exports.MockTitle = MockTitle;
    function MockTitleList(num) {
        var arr = [];
        for (var i = 1; i <= num; i++) {
            var random = Math.floor(Math.random() * 2);
            var random1 = Math.floor(Math.random() * 6);
            var random2 = Math.floor(Math.random() * 6);
            var city = ['沪', '湘', '桂', '京', '鄂', '黑', '粤'];
            var z = ['A', 'B', 'C', 'D', 'E', 'F', 'G'][random1];
            arr.push({
                carTitle: city[random1] + " " + z + (random2 + 1) * 100 + z + random1 + " \u94F6\u8272",
                carImage: "../../../../images/test/car (" + Math.floor(Math.random() * 29) + ").PNG",
                personTitle: random == 0 ? "16-35岁 男 短发" : "16-35岁 女 长发",
                personImage: random == 0 ? "../../../../images/test/man (" + (Math.floor(Math.random() * 43) + 1) + ").PNG" : "../../../../images/test/woman (" + Math.floor(Math.random() * 54) + ").PNG"
            });
        }
        return arr;
    }
    exports.MockTitleList = MockTitleList;
    var MockStatisticsOverview = (function () {
        function MockStatisticsOverview() {
        }
        return MockStatisticsOverview;
    }());
    exports.MockStatisticsOverview = MockStatisticsOverview;
    function MockStatisticsOverviewList(num) {
        var arr = [];
        for (var i = 1; i <= num; i++) {
            arr.push({
                title: ['摄像机', 'Wi-Fi', '电子围栏', '卡口'],
                total: "160,130",
                online: "160,000",
                alarm: "1,200",
                imagesPath: ['../../../images/maintain/item-camera.png',
                    '../../../images/maintain/Wi-Fi.png',
                    '../../../images/maintain/electronicfence.png',
                    '../../../images/maintain/rmpgate.png'
                ]
            });
        }
        return arr;
    }
    exports.MockStatisticsOverviewList = MockStatisticsOverviewList;
    var MockAreaStatistic = (function () {
        function MockAreaStatistic() {
        }
        return MockAreaStatistic;
    }());
    exports.MockAreaStatistic = MockAreaStatistic;
    function MockAreaStatisticList(num) {
        var arr = [];
        for (var i = 1; i <= num; i++) {
            arr.push({
                area: ['武昌区', '江岸区', '江汉区', '硚口区', '汉阳区', '武昌区', '青山区', '洪山区', '蔡甸区', '江夏区', '黄陂区', '新洲区', '东西湖区', '汉南区'],
                areaTaskStatistics: ['人像结构化任务', '车辆结构化任务'],
                areaDispatchedTaskStatistics: ['人像布控任务', '车辆布控任务', 'MAC布控任务'],
                dispatchedAboutTaskStatistics: ['车辆黑名单', '在逃库', '涉毒库', '涉稳库', '沉迷游戏库', '杀人库', '抢劫库'],
                areaAlarm: ['人员报警', '车辆报警', 'MAC报警'],
                areaAlarmTrend: ['00:00', '01:00', '02:00', '03:00', '04:00', '05:00', '06:00', '07:00', '08:00', '09:00', '10:00', '11:00', '12:00', '13:00', '14:00', '15:00', '16:00', '17:00', '18:00', '19:00', '20:00', '21:00', '22:00', '23:00'],
                deviceAlarmStatistic: ['南山摄像机1', '保安摄像机1', '洪山区摄像机1', '洪山区卡口1', '洪山区Wi-Fi-2', '洪山区电围3', '洪山区摄像机3', '江夏区摄像机1', '江夏区电围5', '江夏区Wi-Fi-K'],
                dispatchedAboutAlarm: ['车辆黑名单', '在逃库', '涉毒库', '涉稳库', '沉迷游戏库', '杀人库', '抢劫库', 'MAC黑名单', '涉黑库', '涉黄库'],
                retrievalStatistics: ['车辆', '人像', 'Wi-Fi', '电围', '设备', '位置'],
                carAnalysisStatistics: ['行车轨迹', '跟车分析', '隐匿挖掘', '碰撞分析', '落脚点分析', '套牌分析', '频次分析', '频繁过车', '套牌分析', '落脚点分析', '套牌分析'],
                personAnalysisStatistics: ['人员轨迹', '人脸分析', '伴随分析', '碰撞分析', '频次分析', '频繁分析', '人脸碰撞', '人员报警'],
                macAnalysisStatistics: ['MAC轨迹', '人脸分析', '伴随分析', '碰撞分析', '频次分析', '频繁分析', '人脸碰撞', '人员报警']
            });
        }
        return arr;
    }
    exports.MockAreaStatisticList = MockAreaStatisticList;
    function MockNumber(x, y, z) {
        function Arr(x, y) {
            var result = [];
            for (var i = 0; i < y; i++) {
                var MockNum = Math.round(Math.random() * x);
                result.push(MockNum);
            }
            return result;
        }
        if (!z) {
            return Arr(x, y);
        }
        else {
            var MockArr = [];
            for (var i = 0; i < z; i++) {
                MockArr.push(Arr(x, y));
            }
            return MockArr;
        }
    }
    exports.MockNumber = MockNumber;
    var dt = new Date();
    var y = (dt.getFullYear()).toString();
    var m = (dt.getMonth() + 1).toString();
    var d = (dt.getDate()).toString();
    var hh = (dt.getHours()).toString();
    var mm = (dt.getMinutes()).toString();
    var ss = (dt.getSeconds()).toString();
    parseInt(m) < 10 ? m = "0" + m : m;
    parseInt(d) < 10 ? d = "0" + d : d;
    parseInt(hh) < 10 ? hh = "0" + hh : hh;
    parseInt(mm) < 10 ? mm = "0" + mm : mm;
    parseInt(ss) < 10 ? ss = "0" + ss : ss;
    function GetNDayTime(n) {
        var time = {};
        var dd = new Date();
        dd.setDate(dd.getDate() + n);
        var year = dd.getFullYear();
        var month = (dd.getMonth() + 1).toString();
        var day = (dd.getDate()).toString();
        parseInt(month) < 10 ? month = "0" + month : month;
        parseInt(day) < 10 ? day = "0" + day : day;
        time.startTime = year + "-" + month + "-" + day + " 00:00:00";
        time.endTime = y + "-" + m + "-" + d + " " + hh + ":" + mm + ":" + ss;
        return time;
    }
    exports.GetNDayTime = GetNDayTime;
    exports.FastData = {
        all: { key: 'all', value: 'all', text: '全部' },
        oneDay: { key: 'oneDay', value: GetNDayTime(-1), text: '近一天' },
        weekDay: { key: 'weekDay', value: GetNDayTime(-7), text: '近一周' },
        monthDay: { key: 'monthDay', value: GetNDayTime(-30), text: '近一月' },
        yearDay: { key: 'yearDay', value: GetNDayTime(-365), text: '近一年' },
        selectDay: { key: 'selectDay', value: 'select', text: '自定义' }
    };
    function getFastDataList() {
        var arr = [];
        for (var k in exports.FastData) {
            arr.push({ key: exports.FastData[k].key, value: exports.FastData[k].value, text: exports.FastData[k].text });
        }
        return arr;
    }
    exports.getFastDataList = getFastDataList;
    exports.areaDropList = [
        { text: '武昌区', value: 'aaa', color: '#6c8ce4', selected: false },
        { text: '江岸区', value: 'bbb', color: '#7cccf2', selected: false },
        { text: '江汉区', value: 'ccc', color: '#dcbe99', selected: false },
        { text: '硚口区', value: 'ddd', color: '#F8F0E9', selected: false },
        { text: '汉阳区', value: 'eee', color: '#C9C9C9', selected: false },
        { text: '青山区', value: 'fff', color: '#6F6E6E', selected: false },
        { text: '洪山区', value: 'ggg', color: '#7CCCF2', selected: false },
        { text: '蔡甸区', value: 'hhh', color: '#53c68c', selected: false },
        { text: '江夏区', value: 'iii', color: '#9ad941', selected: false },
        { text: '黄陂区', value: 'jjj', color: '#fbd15a', selected: false },
        { text: '新洲区', value: 'kkk', color: '#9cdcee', selected: false },
        { text: '东西湖区', value: 'lll', color: '#e98371', selected: false }
    ];
    function RankKeyWords(num) {
        var arr = [];
        for (var i = 1; i <= num; i++) {
            var random = Math.floor(Math.random() * 2);
            var random1 = Math.floor(Math.random() * 6);
            var random2 = Math.floor(Math.random() * 6);
            var city = ['沪', '湘', '桂', '京', '鄂', '黑', '粤'];
            var z = ['A', 'B', 'C', 'D', 'E', 'F', 'G'][random1];
            arr.push({
                name: city[random1] + " " + z + (random2 + 1) * 100 + z + random1 + " \u94F6\u8272",
                value: Math.floor(Math.random() * 800)
            });
        }
        return arr.sort(function (a, b) {
            return b.value - a.value;
        });
    }
    exports.RankKeyWords = RankKeyWords;
});

//# sourceMappingURL=data:application/json;charset=utf8;base64,
