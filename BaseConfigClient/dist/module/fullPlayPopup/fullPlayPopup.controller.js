define(["require", "exports", "../common/app/main.app", "../common/directive/ocx/video.ocx.directive", "../common/services/camera.service", "../common/factory/systemInfo.cache.factory"], function (require, exports, main_app_1, video_ocx_directive_1) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var fullPlayPopupController = (function () {
        function fullPlayPopupController($scope, $timeout, $http, notifyFactory, cameraService, systemInfoCacheFactory) {
            var _this = this;
            this.$scope = $scope;
            this.$timeout = $timeout;
            this.$http = $http;
            this.notifyFactory = notifyFactory;
            this.cameraService = cameraService;
            this.systemInfoCacheFactory = systemInfoCacheFactory;
            this.isShowOcxPlayer = false;
            this.playerInfo = this.$scope.PointDeTail;
            if (!this.playerInfo.data && !this.playerInfo.status) {
                console.log("没有播放地址");
                return;
            }
            if (this.playerInfo.type == 2 && this.$scope.PointDeTail.time) {
                this.playerInfo.data.time = this.$scope.PointDeTail.time;
            }
            this.$scope.$on("$destroy", function () {
                _this.videoOcx = null;
            });
            this.notifyFunc = this.notifyFactory.msg({ onlySuccess: true });
        }
        fullPlayPopupController.prototype.initComplete = function (ocxControlFunc) {
            this.videoOcx = ocxControlFunc;
            this.initPlayer();
        };
        fullPlayPopupController.prototype.initPlayer = function () {
            var _this = this;
            if (this.playerInfo.type) {
                if (this.playerInfo.type == 1 && this.playerInfo.status) {
                    window.setTimeout(function () { _this.playRealTime(_this.playerInfo); }, 0);
                }
                if (this.playerInfo.type == 2 && this.playerInfo.status) {
                    window.setTimeout(function () { _this.playPvgBack(_this.playerInfo); }, 0);
                }
            }
            else {
                console.log("未检测到播放指令参数");
            }
        };
        fullPlayPopupController.prototype.formatTime = function (time, timeSlot) {
            if (!time) {
                return '';
            }
            var data = new Date(time);
            if (timeSlot) {
                data = new Date(data.getTime() + timeSlot * 1000);
            }
            var year = data.getFullYear(), month = data.getMonth() >= 9 ? (data.getMonth() + 1).toString() : '0' + (data.getMonth() + 1), day = data.getDate() > 9 ? data.getDate().toString() : '0' + data.getDate(), hours = data.getHours() > 9 ? data.getHours().toString() : '0' + data.getHours(), minutes = data.getMinutes() > 9 ? data.getMinutes().toString() : '0' + data.getMinutes(), ss = data.getSeconds() > 9 ? data.getSeconds().toString() : '0' + data.getSeconds();
            return year + month + day + hours + minutes + ss + '000';
        };
        fullPlayPopupController.prototype.playPvgBack = function (data) {
            this.isShowOcxPlayer = true;
            if (!data.time) {
                return;
            }
            if (this.videoOcx) {
                var timeSlotBegin = -30;
                var timeSlotAfter = 30;
                var systemData = this.systemInfoCacheFactory.getSystemInfo();
                timeSlotBegin = 0 - systemData.videoBeforeTime;
                timeSlotAfter = systemData.videoAfterTime * 1;
                var opts = new video_ocx_directive_1.VideoOcxPvgBackOpt();
                opts.ip = data.data.IpAddress;
                opts.port = data.data.Port;
                opts.path = data.data.PlayName;
                opts.user = data.data.Uid;
                opts.passwd = data.data.Pwd;
                opts.displayModel = this.playerInfo.displayModel || 0;
                opts.hwdecoder = this.playerInfo.hwdecoder || 0;
                opts.beginTime = this.formatTime(data.time, timeSlotBegin);
                opts.endTime = this.formatTime(data.time, timeSlotAfter);
                console.log(opts, 'history video play init');
                this.videoOcx.playPvgBack(opts, this.videoOcx.getFocusWindowIndex());
            }
        };
        fullPlayPopupController.prototype.playRealTime = function (data) {
            this.isShowOcxPlayer = true;
            if (this.videoOcx) {
                console.log(this.videoOcx.getFocusWindowIndex(), this.videoOcx);
                var opts = new video_ocx_directive_1.VideoOcxRealTimeOpt();
                opts.ip = data.data.IpAddress;
                opts.port = data.data.Port;
                opts.path = data.data.PlayName;
                opts.user = data.data.Uid;
                opts.passwd = data.data.Pwd;
                console.log(opts, 'real video play init');
                this.videoOcx.playRealTime(opts, this.videoOcx.getFocusWindowIndex());
            }
        };
        fullPlayPopupController.prototype.stop = function () {
            if (this.videoOcx) {
                this.videoOcx.stop(this.videoOcx.getFocusWindowIndex());
            }
        };
        fullPlayPopupController.$inject = ["$scope", "$timeout", '$http', 'notifyFactory', 'cameraService', 'systemInfoCacheFactory'];
        return fullPlayPopupController;
    }());
    main_app_1.app.controller("fullPlayPopupController", fullPlayPopupController);
});

//# sourceMappingURL=data:application/json;charset=utf8;base64,
