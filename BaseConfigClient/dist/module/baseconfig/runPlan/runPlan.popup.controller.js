define(["require", "exports", "../../common/app/main.app", "../../common/portrait-tool", "../../../core/entity/ex/TimeTemplateEx", "./TimeDraw", "../../../core/server/enum/ThresholdType", "angular", "../../common/services/timeTemplate.service", "../../common/factory/layerMsg.factory"], function (require, exports, main_app_1, portrait_tool_1, TimeTemplateEx_1, TimeDraw_1, ThresholdType_1) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var RunPlanPopupController = (function () {
        function RunPlanPopupController($scope, $timeout, layerDec, timeTemplateService) {
            this.$scope = $scope;
            this.$timeout = $timeout;
            this.layerDec = layerDec;
            this.timeTemplateService = timeTemplateService;
            this.currentDate = portrait_tool_1.default.formatDate(new Date());
            this.timeDrawModel = new TimeDraw_1.TimeDraw();
            this.currentModelID = '';
            this.currentModel = new TimeTemplateEx_1.TimeTemplateEx();
            this.listTemplateModel = [];
            this.initTemplateList();
            this.isUpdate = this.$scope.isUpdate;
            this.initTimeTemplateLayer();
        }
        RunPlanPopupController.prototype.initTemplateList = function () {
            var _this = this;
            this.timeTemplateService.findAll().then(function (res) {
                if (res.code === 200) {
                    _this.listTemplateModel = res.data;
                }
            });
        };
        RunPlanPopupController.prototype.initTimeTemplateLayer = function () {
            var _this = this;
            this.$timeout(function () {
                _this.timeDrawModel.grid.init();
                _this.timeDrawModel.activeTimeType = ThresholdType_1.ThresholdType.Hight.value;
                if (_this.isUpdate) {
                    _this.currentModel = _this.$scope.timeTplModel;
                    _this.timeDrawModel.drawByWeekItems(angular.fromJson(_this.currentModel.WeekContent));
                    _this.timeDrawModel.drawByDateItems(angular.fromJson(_this.currentModel.DayContent));
                }
            });
        };
        RunPlanPopupController.prototype.changeTempaltelayer = function (ID) {
            this.timeDrawModel.clearShapeByType(ThresholdType_1.ThresholdType.Hight.value);
            for (var i = 0; i < this.listTemplateModel.length; i++) {
                if (this.listTemplateModel[i].ID === ID) {
                    try {
                        this.currentModel.WeekItems = JSON.parse(this.listTemplateModel[i].WeekContent);
                        this.currentModel.DateItems = JSON.parse(this.listTemplateModel[i].DayContent);
                        this.currentModel.WeekItems.forEach(function (item) {
                            item.TimeItems.forEach(function (item2) {
                                item2.ThresholdType = ThresholdType_1.ThresholdType.Hight.value;
                            });
                        });
                        this.currentModel.DateItems.forEach(function (item) {
                            item.TimeItems.forEach(function (item2) {
                                item2.ThresholdType = ThresholdType_1.ThresholdType.Hight.value;
                            });
                        });
                        this.timeDrawModel.activeTimeType = ThresholdType_1.ThresholdType.Hight.value;
                        this.timeDrawModel.drawByWeekItems(this.currentModel.WeekItems);
                        this.timeDrawModel.drawByDateItems(this.currentModel.DateItems);
                    }
                    catch (e) {
                        console.error('Date Params is Error');
                        this.timeDrawModel.shape.clearShape();
                        this.timeDrawModel.drawByWeekItems([]);
                        this.timeDrawModel.drawByDateItems([]);
                    }
                    break;
                }
            }
        };
        RunPlanPopupController.prototype.closeUpdateModel = function (isFresh, itemNode) {
            this.$scope.$emit('add.runplan.popup', isFresh, itemNode);
        };
        RunPlanPopupController.prototype.addCustomDayLine = function () {
            this.timeDrawModel.addGripLine(this.customStartDate, this.customEndDate, this.customInfo);
        };
        ;
        RunPlanPopupController.prototype.commitSaveOrUpdate = function () {
            var _this = this;
            var drawResult = this.timeDrawModel.getDrawArea();
            this.currentModel.DateItems = drawResult.DateItems;
            this.currentModel.WeekItems = drawResult.WeekItems;
            if (!this.validate()) {
                return;
            }
            var templateModel = angular.copy(this.currentModel);
            templateModel.CreateTime = Date.now().toString();
            templateModel.DayContent = angular.toJson(this.currentModel.DateItems);
            templateModel.WeekContent = angular.toJson(this.currentModel.WeekItems);
            templateModel.WeekItems = null;
            templateModel.DateItems = null;
            templateModel.IsTemplate = !this.$scope.isTask;
            if (this.isUpdate) {
                this.timeTemplateService.update(templateModel).then(function (resp) {
                    if (resp.code === 200) {
                        _this.closeUpdateModel(true, templateModel);
                    }
                });
            }
            else {
                this.timeTemplateService.save(templateModel).then(function (resp) {
                    if (resp.code === 200) {
                        templateModel.ID = resp.data;
                        _this.closeUpdateModel(true, templateModel);
                    }
                });
            }
        };
        ;
        RunPlanPopupController.prototype.validate = function () {
            if (!this.currentModel.Name) {
                this.layerDec.warnInfo("未填写时间模板名称！");
                return false;
            }
            var hasTimeItem = false;
            angular.forEach(this.currentModel.WeekItems, function (val) {
                if (val.TimeItems && val.TimeItems.length > 0) {
                    hasTimeItem = true;
                }
            });
            if (!hasTimeItem && this.currentModel.DateItems.length === 0) {
                this.layerDec.warnInfo("未做时间模板时间选择！");
                return false;
            }
            return true;
        };
        ;
        RunPlanPopupController.$inject = ['$scope', '$timeout', 'layerDec', 'timeTemplateService'];
        return RunPlanPopupController;
    }());
    main_app_1.app.controller('runPlanPopupController', RunPlanPopupController);
});

//# sourceMappingURL=data:application/json;charset=utf8;base64,
