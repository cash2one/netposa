define(["require", "exports", "../../common/portrait-tool", "../../../core/enum/ObjectType"], function (require, exports, portrait_tool_1, ObjectType_1) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var MyReportMock = (function () {
        function MyReportMock() {
        }
        MyReportMock.getMock = function () {
            return {
                code: 200,
                count: MyReportMock.Count,
                message: "",
                status: "",
                data: {
                    TotalCount: MyReportMock.Count,
                    Result: MyReportMock._getMock()
                }
            };
        };
        MyReportMock._getMock = function () {
            var i = 0, len = MyReportMock.Count, result = [];
            for (; i < len; i++) {
                result.push({
                    AlarmLog: MyReportMock.getAlarmLog(),
                    AlarmLogInfoArr: MyReportMock.getAlarmLogInfoArr(),
                    AlarmNum: 10,
                    AreaName: "AreaName",
                    Attention: true,
                    Collected: false,
                    ResponsePersonName: "REsponsePersonName"
                });
            }
            return result;
        };
        MyReportMock.getAlarmLog = function () {
            return {
                AccessLogID: "AccessLogID",
                AlarmTime: portrait_tool_1.default.formatDate(MyReportMock.getDate()),
                AreaID: "AreaID",
                CapFacePicUrl: "CapFacePicUrl",
                EventType: "EventType",
                ID: "ID",
                Notes: "",
                IsUpload: true,
                Level: 1,
                ObjectID: "ObjectID",
                ObjectName: "ObjectName",
                ObjectType: MyReportMock.getObjectType(),
                ReceiveSubAlarmDateTime: "ReceiveSubAlarmDateTime",
                ResponseState: "ResponseState",
                ResponseTime: "ResponseTime",
                Similarty: 0.8,
                TaskId: "TaskId"
            };
        };
        MyReportMock.getObjectType = function () {
            var num = Math.floor(Math.random() * 10);
            var result = ObjectType_1.ObjectType.Camera.value;
            switch (num) {
                case 1:
                case 2:
                    result = ObjectType_1.ObjectType.Wifi.value;
                    break;
                case 3:
                case 4:
                case 5:
                    result = ObjectType_1.ObjectType.ElectronicFence.value;
                    break;
                case 6:
                case 7:
                    result = ObjectType_1.ObjectType.Camera.value;
                    break;
                case 8:
                case 9:
                case 0:
                    result = ObjectType_1.ObjectType.Vehicle.value;
                    break;
            }
            return result;
        };
        MyReportMock.getDate = function () {
            var dateNum = MyReportMock.currentDate.getTime();
            var newDate = new Date(dateNum);
            return portrait_tool_1.default.addHours(newDate, MyReportMock.currentIndex++ * 2);
        };
        MyReportMock.getAlarmLogInfoArr = function () {
            return [this.getAlarmLogInfo(), this.getAlarmLogInfo()];
        };
        MyReportMock.getAlarmLogInfo = function () {
            return {
                AlarmLogID: "AlarmLogID",
                ID: "ID",
                LibID: "LibId",
                PersonInfo: this.getPersonInfo(),
                Similarty: "Similarty",
                SimilartyStatus: "SimilartyStatus"
            };
        };
        MyReportMock.getPersonInfo = function () {
            return {
                Name: "Name",
                ID: "ID",
                LogTime: "LogTime",
                IDCardNumber: "IDCardNumber",
                FacePicPath: ["default.png"],
                Birth: "1990-02-15",
                HomeAddress: "HomeAddress",
                Nation: "汉族",
                LibId: "LibId",
                BeginDate: "2017-11-17 10:00:00",
                CreateTime: "2017-11-14 10:00:00",
                UpdateTime: "2017-11-16 10:00:00",
                CertifyingAuthority: "CertifyingAuthority",
                Gender: "Gender",
                userTag: "userTag"
            };
        };
        MyReportMock.Count = 80;
        MyReportMock.currentDate = new Date(Math.random() * 3000000000000);
        MyReportMock.currentIndex = 0;
        return MyReportMock;
    }());
    exports.MyReportMock = MyReportMock;
});

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9tb2R1bGUvdG9vbE9wdGlvbi9teVJlcG9ydC9teVJlcG9ydE1vY2sudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7O0lBS0E7UUFBQTtRQTJIQSxDQUFDO1FBckhVLG9CQUFPLEdBQWQ7WUFDSSxNQUFNLENBQUM7Z0JBQ0gsSUFBSSxFQUFFLEdBQUc7Z0JBQ1QsS0FBSyxFQUFFLFlBQVksQ0FBQyxLQUFLO2dCQUN6QixPQUFPLEVBQUUsRUFBRTtnQkFDWCxNQUFNLEVBQUUsRUFBRTtnQkFDVixJQUFJLEVBQUU7b0JBQ0YsVUFBVSxFQUFFLFlBQVksQ0FBQyxLQUFLO29CQUM5QixNQUFNLEVBQUUsWUFBWSxDQUFDLFFBQVEsRUFBRTtpQkFDbEM7YUFDSixDQUFDO1FBQ04sQ0FBQztRQUVjLHFCQUFRLEdBQXZCO1lBQ0ksSUFBSSxDQUFDLEdBQUcsQ0FBQyxFQUFFLEdBQUcsR0FBRyxZQUFZLENBQUMsS0FBSyxFQUFFLE1BQU0sR0FBRyxFQUFFLENBQUM7WUFDakQsR0FBRyxDQUFDLENBQUMsRUFBRSxDQUFDLEdBQUcsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLENBQUM7Z0JBQ2xCLE1BQU0sQ0FBQyxJQUFJLENBQUM7b0JBQ1IsUUFBUSxFQUFFLFlBQVksQ0FBQyxXQUFXLEVBQUU7b0JBQ3BDLGVBQWUsRUFBRSxZQUFZLENBQUMsa0JBQWtCLEVBQUU7b0JBQ2xELFFBQVEsRUFBRSxFQUFFO29CQUNaLFFBQVEsRUFBRSxVQUFVO29CQUNwQixTQUFTLEVBQUUsSUFBSTtvQkFDZixTQUFTLEVBQUUsS0FBSztvQkFDaEIsa0JBQWtCLEVBQUUsb0JBQW9CO2lCQUMzQyxDQUFDLENBQUM7WUFDUCxDQUFDO1lBQ0QsTUFBTSxDQUFDLE1BQU0sQ0FBQztRQUNsQixDQUFDO1FBRWMsd0JBQVcsR0FBMUI7WUFDSSxNQUFNLENBQUM7Z0JBQ0gsV0FBVyxFQUFFLGFBQWE7Z0JBQzFCLFNBQVMsRUFBRSx1QkFBWSxDQUFDLFVBQVUsQ0FBQyxZQUFZLENBQUMs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O2dCQUNaLEtBQUssRUFBRSxPQUFPO2dCQUNkLFNBQVMsRUFBRSxxQkFBcUI7Z0JBQ2hDLFVBQVUsRUFBRSxxQkFBcUI7Z0JBQ2pDLFVBQVUsRUFBRSxxQkFBcUI7Z0JBQ2pDLG1CQUFtQixFQUFFLHFCQUFxQjtnQkFDMUMsTUFBTSxFQUFFLFFBQVE7Z0JBQ2hCLE9BQU8sRUFBRSxTQUFTO2FBQ3JCLENBQUM7UUFDTixDQUFDO1FBekhNLGtCQUFLLEdBQUcsRUFBRSxDQUFDO1FBRVgsd0JBQVcsR0FBRyxJQUFJLElBQUksQ0FBQyxJQUFJLENBQUMsTUFBTSxFQUFFLEdBQUcsYUFBYSxDQUFDLENBQUM7UUFDdEQseUJBQVksR0FBRyxDQUFDLENBQUM7UUF1SDVCLG1CQUFDO0tBM0hELEFBMkhDLElBQUE7SUEzSFksb0NBQVkiLCJmaWxlIjoibW9kdWxlL3Rvb2xPcHRpb24vbXlSZXBvcnQvbXlSZXBvcnRNb2NrLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtSZXNwb25zZVJlc3VsdCwgUGFnZVJlc3VsdH0gZnJvbSBcIi4uLy4uLy4uL2NvcmUvcGFyYW1zL3Jlc3VsdC9SZXNwb25zZVJlc3VsdFwiO1xyXG5pbXBvcnQge1NlYXJjaEFsYXJtTG9nUmVzdWx0fSBmcm9tIFwiLi4vLi4vLi4vY29yZS9zZXJ2ZXIvQWxhcm1Nb2R1bGVcIjtcclxuaW1wb3J0IFBvcnRyYWl0VG9vbCBmcm9tICcuLi8uLi9jb21tb24vcG9ydHJhaXQtdG9vbCc7XHJcbmltcG9ydCB7T2JqZWN0VHlwZX0gZnJvbSBcIi4uLy4uLy4uL2NvcmUvZW51bS9PYmplY3RUeXBlXCI7XHJcblxyXG5leHBvcnQgY2xhc3MgTXlSZXBvcnRNb2NrIHtcclxuICAgIHN0YXRpYyBDb3VudCA9IDgwO1xyXG4gICAgLy8gbmV3IERhdGUoTWF0aC5yYW5kb20oKSozMDAwMDAwMDAwMDAwKTtcclxuICAgIHN0YXRpYyBjdXJyZW50RGF0ZSA9IG5ldyBEYXRlKE1hdGgucmFuZG9tKCkgKiAzMDAwMDAwMDAwMDAwKTtcclxuICAgIHN0YXRpYyBjdXJyZW50SW5kZXggPSAwO1xyXG5cclxuICAgIHN0YXRpYyBnZXRNb2NrKCk6IFJlc3BvbnNlUmVzdWx0PFBhZ2VSZXN1bHQ8YW55Pj4ge1xyXG4gICAgICAgIHJldHVybiB7XHJcbiAgICAgICAgICAgIGNvZGU6IDIwMCxcclxuICAgICAgICAgICAgY291bnQ6IE15UmVwb3J0TW9jay5Db3VudCxcclxuICAgICAgICAgICAgbWVzc2FnZTogXCJcIixcclxuICAgICAgICAgICAgc3RhdHVzOiBcIlwiLFxyXG4gICAgICAgICAgICBkYXRhOiB7XHJcbiAgICAgICAgICAgICAgICBUb3RhbENvdW50OiBNeVJlcG9ydE1vY2suQ291bnQsXHJcbiAgICAgICAgICAgICAgICBSZXN1bHQ6IE15UmVwb3J0TW9jay5fZ2V0TW9jaygpXHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9O1xyXG4gICAgfVxyXG5cclxuICAgIHByaXZhdGUgc3RhdGljIF9nZXRNb2NrKCk6IEFycmF5PFNlYXJjaEFsYXJtTG9nUmVzdWx0PiB7XHJcbiAgICAgICAgbGV0IGkgPSAwLCBsZW4gPSBNeVJlcG9ydE1vY2suQ291bnQsIHJlc3VsdCA9IFtdO1xyXG4gICAgICAgIGZvciAoOyBpIDwgbGVuOyBpKyspIHtcclxuICAgICAgICAgICAgcmVzdWx0LnB1c2goe1xyXG4gICAgICAgICAgICAgICAgQWxhcm1Mb2c6IE15UmVwb3J0TW9jay5nZXRBbGFybUxvZygpLFxyXG4gICAgICAgICAgICAgICAgQWxhcm1Mb2dJbmZvQXJyOiBNeVJlcG9ydE1vY2suZ2V0QWxhcm1Mb2dJbmZvQXJyKCksXHJcbiAgICAgICAgICAgICAgICBBbGFybU51bTogMTAsXHJcbiAgICAgICAgICAgICAgICBBcmVhTmFtZTogXCJBcmVhTmFtZVwiLFxyXG4gICAgICAgICAgICAgICAgQXR0ZW50aW9uOiB0cnVlLFxyXG4gICAgICAgICAgICAgICAgQ29sbGVjdGVkOiBmYWxzZSxcclxuICAgICAgICAgICAgICAgIFJlc3BvbnNlUGVyc29uTmFtZTogXCJSRXNwb25zZVBlcnNvbk5hbWVcIlxyXG4gICAgICAgICAgICB9KTtcclxuICAgICAgICB9XHJcbiAgICAgICAgcmV0dXJuIHJlc3VsdDtcclxuICAgIH1cclxuXHJcbiAgICBwcml2YXRlIHN0YXRpYyBnZXRBbGFybUxvZygpIHtcclxuICAgICAgICByZXR1cm4ge1xyXG4gICAgICAgICAgICBBY2Nlc3NMb2dJRDogXCJBY2Nlc3NMb2dJRFwiLFxyXG4gICAgICAgICAgICBBbGFybVRpbWU6IFBvcnRyYWl0VG9vbC5mb3JtYXREYXRlKE15UmVwb3J0TW9jay5nZXREYXRlKCkpLFxyXG4gICAgICAgICAgICBBcmVhSUQ6IFwiQXJlYUlEXCIsXHJcbiAgICAgICAgICAgIENhcEZhY2VQaWNVcmw6IFwiQ2FwRmFjZVBpY1VybFwiLFxyXG4gICAgICAgICAgICBFdmVudFR5cGU6IFwiRXZlbnRUeXBlXCIsXHJcbiAgICAgICAgICAgIElEOiBcIklEXCIsXHJcbiAgICAgICAgICAgIE5vdGVzOiBcIlwiLFxyXG4gICAgICAgICAgICBJc1VwbG9hZDogdHJ1ZSxcclxuICAgICAgICAgICAgTGV2ZWw6IDEsXHJcbiAgICAgICAgICAgIE9iamVjdElEOiBcIk9iamVjdElEXCIsXHJcbiAgICAgICAgICAgIE9iamVjdE5hbWU6IFwiT2JqZWN0TmFtZVwiLFxyXG4gICAgICAgICAgICBPYmplY3RUeXBlOiBNeVJlcG9ydE1vY2suZ2V0T2JqZWN0VHlwZSgpLFxyXG4gICAgICAgICAgICBSZWNlaXZlU3ViQWxhcm1EYXRlVGltZTogXCJSZWNlaXZlU3ViQWxhcm1EYXRlVGltZVwiLFxyXG4gICAgICAgICAgICBSZXNwb25zZVN0YXRlOiBcIlJlc3BvbnNlU3RhdGVcIixcclxuICAgICAgICAgICAgUmVzcG9uc2VUaW1lOiBcIlJlc3BvbnNlVGltZVwiLFxyXG4gICAgICAgICAgICBTaW1pbGFydHk6IDAuOCxcclxuICAgICAgICAgICAgVGFza0lkOiBcIlRhc2tJZFwiXHJcbiAgICAgICAgfTtcclxuICAgIH1cclxuXHJcbiAgICBwcml2YXRlIHN0YXRpYyBnZXRPYmplY3RUeXBlKCkge1xyXG4gICAgICAgIGxldCBudW0gPSBNYXRoLmZsb29yKE1hdGgucmFuZG9tKCkgKiAxMCk7XHJcbiAgICAgICAgbGV0IHJlc3VsdCA9IE9iamVjdFR5cGUuQ2FtZXJhLnZhbHVlO1xyXG4gICAgICAgIHN3aXRjaCAobnVtKSB7XHJcbiAgICAgICAgICAgIGNhc2UgMTpcclxuICAgICAgICAgICAgY2FzZSAyOlxyXG4gICAgICAgICAgICAgICAgcmVzdWx0ID0gT2JqZWN0VHlwZS5XaWZpLnZhbHVlO1xyXG4gICAgICAgICAgICAgICAgYnJlYWs7XHJcbiAgICAgICAgICAgIGNhc2UgMzpcclxuICAgICAgICAgICAgY2FzZSA0OlxyXG4gICAgICAgICAgICBjYXNlIDU6XHJcbiAgICAgICAgICAgICAgICByZXN1bHQgPSBPYmplY3RUeXBlLkVsZWN0cm9uaWNGZW5jZS52YWx1ZTtcclxuICAgICAgICAgICAgICAgIGJyZWFrO1xyXG4gICAgICAgICAgICBjYXNlIDY6XHJcbiAgICAgICAgICAgIGNhc2UgNzpcclxuICAgICAgICAgICAgICAgIHJlc3VsdCA9IE9iamVjdFR5cGUuQ2FtZXJhLnZhbHVlO1xyXG4gICAgICAgICAgICAgICAgYnJlYWs7XHJcbiAgICAgICAgICAgIGNhc2UgODpcclxuICAgICAgICAgICAgY2FzZSA5OlxyXG4gICAgICAgICAgICBjYXNlIDA6XHJcbiAgICAgICAgICAgICAgICByZXN1bHQgPSBPYmplY3RUeXBlLlZlaGljbGUudmFsdWU7XHJcbiAgICAgICAgICAgICAgICBicmVhaztcclxuICAgICAgICB9XHJcbiAgICAgICAgcmV0dXJuIHJlc3VsdDtcclxuICAgIH1cclxuXHJcbiAgICBwcml2YXRlIHN0YXRpYyBnZXREYXRlKCkge1xyXG4gICAgICAgIGxldCBkYXRlTnVtID0gTXlSZXBvcnRNb2NrLmN1cnJlbnREYXRlLmdldFRpbWUoKTtcclxuICAgICAgICBsZXQgbmV3RGF0ZSA9IG5ldyBEYXRlKGRhdGVOdW0pO1xyXG4gICAgICAgIHJldHVybiBQb3J0cmFpdFRvb2wuYWRkSG91cnMobmV3RGF0ZSwgTXlSZXBvcnRNb2NrLmN1cnJlbnRJbmRleCsrICogMik7XHJcbiAgICB9XHJcblxyXG4gICAgcHJpdmF0ZSBzdGF0aWMgZ2V0QWxhcm1Mb2dJbmZvQXJyKCkge1xyXG4gICAgICAgIHJldHVybiBbdGhpcy5nZXRBbGFybUxvZ0luZm8oKSwgdGhpcy5nZXRBbGFybUxvZ0luZm8oKV07XHJcbiAgICB9XHJcblxyXG4gICAgcHJpdmF0ZSBzdGF0aWMgZ2V0QWxhcm1Mb2dJbmZvKCkge1xyXG4gICAgICAgIHJldHVybiB7XHJcbiAgICAgICAgICAgIEFsYXJtTG9nSUQ6IFwiQWxhcm1Mb2dJRFwiLFxyXG4gICAgICAgICAgICBJRDogXCJJRFwiLFxyXG4gICAgICAgICAgICBMaWJJRDogXCJMaWJJZFwiLFxyXG4gICAgICAgICAgICBQZXJzb25JbmZvOiB0aGlzLmdldFBlcnNvbkluZm8oKSxcclxuICAgICAgICAgICAgU2ltaWxhcnR5OiBcIlNpbWlsYXJ0eVwiLFxyXG4gICAgICAgICAgICBTaW1pbGFydHlTdGF0dXM6IFwiU2ltaWxhcnR5U3RhdHVzXCJcclxuICAgICAgICB9O1xyXG4gICAgfVxyXG5cclxuICAgIHByaXZhdGUgc3RhdGljIGdldFBlcnNvbkluZm8oKSB7XHJcbiAgICAgICAgcmV0dXJuIHtcclxuICAgICAgICAgICAgTmFtZTogXCJOYW1lXCIsXHJcbiAgICAgICAgICAgIElEOiBcIklEXCIsXHJcbiAgICAgICAgICAgIExvZ1RpbWU6IFwiTG9nVGltZVwiLFxyXG4gICAgICAgICAgICBJRENhcmROdW1iZXI6IFwiSURDYXJkTnVtYmVyXCIsXHJcbiAgICAgICAgICAgIEZhY2VQaWNQYXRoOiBbXCJkZWZhdWx0LnBuZ1wiXSxcclxuICAgICAgICAgICAgQmlydGg6IFwiMTk5MC0wMi0xNVwiLFxyXG4gICAgICAgICAgICBIb21lQWRkcmVzczogXCJIb21lQWRkcmVzc1wiLFxyXG4gICAgICAgICAgICBOYXRpb246IFwi5rGJ5pePXCIsXHJcbiAgICAgICAgICAgIExpYklkOiBcIkxpYklkXCIsXHJcbiAgICAgICAgICAgIEJlZ2luRGF0ZTogXCIyMDE3LTExLTE3IDEwOjAwOjAwXCIsXHJcbiAgICAgICAgICAgIENyZWF0ZVRpbWU6IFwiMjAxNy0xMS0xNCAxMDowMDowMFwiLFxyXG4gICAgICAgICAgICBVcGRhdGVUaW1lOiBcIjIwMTctMTEtMTYgMTA6MDA6MDBcIixcclxuICAgICAgICAgICAgQ2VydGlmeWluZ0F1dGhvcml0eTogXCJDZXJ0aWZ5aW5nQXV0aG9yaXR5XCIsXHJcbiAgICAgICAgICAgIEdlbmRlcjogXCJHZW5kZXJcIixcclxuICAgICAgICAgICAgdXNlclRhZzogXCJ1c2VyVGFnXCJcclxuICAgICAgICB9O1xyXG4gICAgfVxyXG59ICJdfQ==
