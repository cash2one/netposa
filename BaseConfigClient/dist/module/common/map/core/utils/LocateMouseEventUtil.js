define(["require", "exports", "es6-promise"], function (require, exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var Promise = require("es6-promise");
    var LocateMouseEventUtil = (function () {
        function LocateMouseEventUtil(mapAdapter, mapId) {
            var _this = this;
            this.isDrag = false;
            this.onMouseMove = function (event) {
                var clientX = event.clientX;
                var clientY = event.clientY;
                var _body = angular.element("body");
                var scrollX = _body.scrollLeft();
                var scrollY = _body.scrollTop();
                _this.setMouseMoveDomPosition(event.clientX + scrollX, event.clientY + scrollY);
            };
            this.onMouseUp = function (event) {
                console.log("鼠标抬起", event);
                var point = _this.getCurrentMouseMapPoint(event.clientX, event.clientY);
                _this.endDrag(point);
                return false;
            };
            this.mapAdapter = mapAdapter;
            this.mapId = mapId;
        }
        LocateMouseEventUtil.prototype.startDrag = function (message) {
            var _this = this;
            if (this.isDrag) {
                console.log("上次拖拽还未取消,故先取消");
                this.endDrag();
            }
            return new Promise(function (resolve, reject) {
                _this.isDrag = true;
                _this.resolve = resolve;
                _this.reject = reject;
                var _body = angular.element("body");
                _body.on("mousemove.locate", _this.onMouseMove);
                _body.on("mouseup.locate", _this.onMouseUp);
                _body.css("cursor", "pointer");
                _this.mapAdapter.setCursor("pointer");
                _this.initMouseMoveDom(message);
            });
        };
        LocateMouseEventUtil.prototype.endDrag = function (point) {
            var _this = this;
            this.mapAdapter.removeEventListener(NPMapLib.MAP_EVENT_MOUSE_MOVE);
            this.mapAdapter.setCursor("auto");
            console.log("成功解绑地图事件");
            var _body = angular.element("body");
            _body.off("mousemove.locate");
            _body.off("mouseup.locate");
            _body.css("cursor", "auto");
            this.removeMouseMovDom();
            this.isDrag = false;
            setTimeout(function () {
                if (_this.resolve) {
                    _this.resolve(point);
                }
                _this.resolve = null;
                _this.reject = null;
            });
        };
        LocateMouseEventUtil.prototype.initMouseMoveDom = function (msg) {
            this.removeMouseMovDom();
            var dom = angular.element("<div style='position: absolute; height: 28px; line-height: 28px; background-color: #66ccff;color:#fff; z-index: 10000;padding:0 6px'>" + msg + "</div>");
            dom.css({ "left": "-1000px", "top": "-1000px" });
            var _body = angular.element("body");
            _body.append(dom);
            this.mouseMoveDom = dom;
        };
        LocateMouseEventUtil.prototype.setMouseMoveDomPosition = function (left, top) {
            if (this.mouseMoveDom) {
                this.mouseMoveDom.css({ top: top + "px", left: left + "px" });
            }
        };
        LocateMouseEventUtil.prototype.removeMouseMovDom = function () {
            if (this.mouseMoveDom) {
                this.mouseMoveDom.remove();
            }
        };
        LocateMouseEventUtil.prototype.getCurrentMouseMapPoint = function (clientX, clientY) {
            console.log("当前鼠标的位置为", clientX, clientY);
            var _container = angular.element("#" + this.mapId);
            var _offset = _container.offset();
            var _body = angular.element("body");
            var _scrollTop = _body.scrollTop();
            var _scrollLeft = _body.scrollLeft();
            var _targetClientX = _scrollLeft + clientX - _offset.left;
            var _targetClientY = _scrollTop + clientY - _offset.top;
            var result = null;
            var _pixel = null;
            console.log("获取到的地图控件内位置为", _targetClientX, _targetClientY);
            if (_targetClientX >= 0 && _targetClientY >= 0) {
                var _pixel_1 = new NPMapLib.Geometry.Pixel(_targetClientX, _targetClientY);
                result = this.mapAdapter.pixelToPoint(_pixel_1);
            }
            else {
                console.log("获取点位不在地图控件内");
            }
            console.log("最终转换为的point为", result);
            return result;
        };
        return LocateMouseEventUtil;
    }());
    exports.LocateMouseEventUtil = LocateMouseEventUtil;
});

//# sourceMappingURL=data:application/json;charset=utf8;base64,
