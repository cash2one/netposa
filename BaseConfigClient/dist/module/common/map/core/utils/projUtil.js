define(["require", "exports"], function (require, exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var coordHelper = (function () {
        function coordHelper() {
        }
        coordHelper.pi = 3.14159265358979324;
        coordHelper.ee = 0.00669342162296594323;
        coordHelper.x_pi = 3.14159265358979324 * 3000.0 / 180.0;
        coordHelper.pole = 20037508.34;
        coordHelper.a = 6378245.0;
        coordHelper.transform = function (lon, lat) {
            var localHashMap = {};
            if (coordHelper.outofChina(lat, lon)) {
                localHashMap.lon = lon;
                localHashMap.lat = lat;
                return localHashMap;
            }
            var dLat = coordHelper.transformLat(lon - 105.0, lat - 35.0);
            var dLon = coordHelper.transformLon(lon - 105.0, lat - 35.0);
            var radLat = lat / 180.0 * coordHelper.pi;
            var magic = Math.sin(radLat);
            magic = 1 - coordHelper.ee * magic * magic;
            var sqrtMagic = Math.sqrt(magic);
            dLat = (dLat * 180.0) / ((coordHelper.a * (1 - coordHelper.ee)) / (magic * sqrtMagic) * coordHelper.pi);
            dLon = (dLon * 180.0) / (coordHelper.a / sqrtMagic * Math.cos(radLat) * coordHelper.pi);
            var mgLat = lat + dLat;
            var mgLon = lon + dLon;
            localHashMap.lon = mgLon;
            localHashMap.lat = mgLat;
            return localHashMap;
        };
        coordHelper.outofChina = function (lat, lon) {
            if (lon < 72.004 || lon > 137.8347)
                return true;
            if (lat < 0.8293 || lat > 55.8271)
                return true;
            return false;
        };
        coordHelper.transformLat = function (x, y) {
            var ret = -100.0 + 2.0 * x + 3.0 * y + 0.2 * y * y + 0.1 * x * y + 0.2 * Math.sqrt(Math.abs(x));
            ret += (20.0 * Math.sin(6.0 * x * coordHelper.pi) + 20.0 * Math.sin(2.0 * x * coordHelper.pi)) * 2.0 / 3.0;
            ret += (20.0 * Math.sin(y * coordHelper.pi) + 40.0 * Math.sin(y / 3.0 * coordHelper.pi)) * 2.0 / 3.0;
            ret += (160.0 * Math.sin(y / 12.0 * coordHelper.pi) + 320 * Math.sin(y * coordHelper.pi / 30.0)) * 2.0 / 3.0;
            return ret;
        };
        coordHelper.transformLon = function (x, y) {
            var ret = 300.0 + x + 2.0 * y + 0.1 * x * x + 0.1 * x * y + 0.1 * Math.sqrt(Math.abs(x));
            ret += (20.0 * Math.sin(6.0 * x * coordHelper.pi) + 20.0 * Math.sin(2.0 * x * coordHelper.pi)) * 2.0 / 3.0;
            ret += (20.0 * Math.sin(x * coordHelper.pi) + 40.0 * Math.sin(x / 3.0 * coordHelper.pi)) * 2.0 / 3.0;
            ret += (150.0 * Math.sin(x / 12.0 * coordHelper.pi) + 300.0 * Math.sin(x / 30.0 * coordHelper.pi)) * 2.0 / 3.0;
            return ret;
        };
        coordHelper.gcj2wgs = function (lon, lat) {
            var p = {
                lon: 0,
                lat: 0
            };
            var lontitude = lon - (coordHelper.transform(lon, lat).lon - lon);
            var latitude = lat - (coordHelper.transform(lon, lat).lat - lat);
            p.lon = lontitude;
            p.lat = latitude;
            return p;
        };
        coordHelper.bd_encrypt = function (gg_lon, gg_lat) {
            var x = gg_lon, y = gg_lat;
            var z = Math.sqrt(x * x + y * y) + 0.00002 * Math.sin(y * coordHelper.x_pi);
            var theta = Math.atan2(y, x) + 0.000003 * Math.cos(x * coordHelper.x_pi);
            var bd_lon = z * Math.cos(theta) + 0.0065;
            var bd_lat = z * Math.sin(theta) + 0.006;
            return {
                lon: bd_lon,
                lat: bd_lat
            };
        };
        coordHelper.bd_decrypt = function (bd_lon, bd_lat) {
            var x = bd_lon - 0.0065, y = bd_lat - 0.006;
            var z = Math.sqrt(x * x + y * y) - 0.00002 * Math.sin(y * coordHelper.x_pi);
            var theta = Math.atan2(y, x) - 0.000003 * Math.cos(x * coordHelper.x_pi);
            var gg_lon = z * Math.cos(theta);
            var gg_lat = z * Math.sin(theta);
            return {
                lon: gg_lon,
                lat: gg_lat
            };
        };
        coordHelper.webMoctorJW2PM = function (lon, lat) {
            var c = {
                lon: 0,
                lat: 0
            };
            c.lon = (lon / 180.0) * 20037508.34;
            if (lat > 85.05112) {
                lat = 85.05112;
            }
            if (lat < -85.05112) {
                lat = -85.05112;
            }
            lat = (Math.PI / 180.0) * lat;
            var tmp = Math.PI / 4.0 + lat / 2.0;
            c.lat = 20037508.34 * Math.log(Math.tan(tmp)) / Math.PI;
            return c;
        };
        coordHelper.inverseMercator = function (lon, lat) {
            lon = 180 * lon / coordHelper.pole;
            lat = 180 / Math.PI * (2 * Math.atan(Math.exp((lat / coordHelper.pole) * Math.PI)) - Math.PI / 2);
            return {
                lon: lon,
                lat: lat
            };
        };
        return coordHelper;
    }());
    exports.coordHelper = coordHelper;
    ;
});

//# sourceMappingURL=data:application/json;charset=utf8;base64,
