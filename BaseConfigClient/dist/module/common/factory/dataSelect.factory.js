define(["require", "exports", "../app/main.app", "moment"], function (require, exports, main_app_1) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var dataSelectResult = (function () {
        function dataSelectResult() {
        }
        return dataSelectResult;
    }());
    exports.dataSelectResult = dataSelectResult;
    exports.moduleString = {
        Day: "Day",
        Week: "Week",
        Month: "Month",
        Year: "Year",
        ALL: "ALL",
        Custom: "Custom"
    };
    exports.DateSelectEnum = {
        ALL: {
            value: exports.moduleString.ALL,
            text: "全部"
        },
        Day: {
            value: exports.moduleString.Day,
            text: "近一天"
        },
        Week: {
            value: exports.moduleString.Week,
            text: "近一周"
        },
        Month: {
            value: exports.moduleString.Month,
            text: "近一月"
        },
        Year: {
            value: exports.moduleString.Year,
            text: "近一年"
        },
        Custom: {
            value: exports.moduleString.Custom,
            text: "自定义"
        }
    };
    var dataSelectServer = (function () {
        function dataSelectServer() {
        }
        dataSelectServer.prototype.getParamsTime = function (type) {
            var endTime = moment().format();
            var startTime = moment().format();
            switch (type.module) {
                case exports.moduleString.Day:
                    startTime = moment().subtract(1, 'days').format('YYYY-MM-DD 00:00:00');
                    endTime = moment().subtract(1, 'days').format('YYYY-MM-DD 23:59:59');
                    break;
                case exports.moduleString.Week:
                    startTime = moment().subtract(8, 'days').format('YYYY-MM-DD 00:00:00');
                    endTime = moment().subtract(1, 'days').format('YYYY-MM-DD 23:59:59');
                    break;
                case exports.moduleString.Month:
                    startTime = moment().subtract(31, 'days').format('YYYY-MM-DD 00:00:00');
                    endTime = moment().subtract(1, 'days').format('YYYY-MM-DD 23:59:59');
                    break;
                case exports.moduleString.Year:
                    startTime = moment().subtract(12, 'months').format('YYYY-MM-DD 00:00:00');
                    endTime = moment().subtract(1, 'days').format('YYYY-MM-DD 23:59:59');
                    break;
                case exports.moduleString.ALL:
                    startTime = moment().subtract(12, 'months').format('YYYY-MM-DD 00:00:00');
                    endTime = moment().subtract(1, 'days').format('YYYY-MM-DD 23:59:59');
                    break;
                case exports.moduleString.Custom:
                    startTime = type.startTime;
                    endTime = type.endTime;
                default:
                    break;
            }
            return {
                module: type.module == exports.moduleString.ALL ? exports.moduleString.Day : type.module,
                startTime: startTime && startTime.replace('+08:00', '').replace('T', ' '),
                endTime: endTime && endTime.replace('+08:00', '').replace('T', ' ')
            };
        };
        dataSelectServer.prototype.createDayTimeLine = function () {
            var result = [];
            for (var i = 1; i < 25; i++) {
                result.push(i + ":00");
            }
            return result;
        };
        dataSelectServer.prototype.createWeekTimeLine = function () {
            var result = [];
            for (var i = 1; i < 8; i++) {
                var week = moment().subtract(i, 'days').format('DD');
                result.push(week + "\u65E5");
            }
            return result.reverse();
        };
        dataSelectServer.prototype.createMonthTimeLine = function () {
            var result = [];
            for (var i = 1; i < 31; i++) {
                var month = moment().subtract(i, 'days').format('DD');
                result.push(month + "\u65E5");
            }
            return result.reverse();
        };
        dataSelectServer.prototype.createYearTimeLine = function () {
            var result = [];
            for (var i = 1; i < 13; i++) {
                var month = moment().subtract(i, 'month').format('MM');
                result.push(month + "\u6708");
            }
            return result.reverse();
        };
        return dataSelectServer;
    }());
    exports.dataSelectServer = dataSelectServer;
    main_app_1.app.service('dataSelectServer', dataSelectServer);
});

//# sourceMappingURL=data:application/json;charset=utf8;base64,
